{"version":3,"sources":["logo.svg","CONST.js","Toolbar.jsx","Main.jsx","Api.js","AddStudent.jsx","DeleteStudent.jsx","DataReducer.jsx","Cell.jsx","ListStudents.jsx","TechTask.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["AppRoute","ROOT","ADD","DELETE","LIST","TECHTASK","ReducerActionRouter","Toolbar","className","to","Main","a","fetch","response","json","data","url","URLSearchParams","toString","method","AddStudent","useState","info","setinfo","formRef","useRef","usernameRef","lastnameRef","patronymicRef","studygroupRef","dateofbrithRef","ref","htmlFor","id","name","type","required","onClick","evt","preventDefault","recStudent","username","current","value","lastname","patronymic","studygroup","dateofbrith","then","answer","DeleteStudent","nameRef","userRequest","console","log","deleteStudents","DataContext","React","createContext","initialState","active","result","status","dataReducer","state","action","payload","Object","assign","responseError","newPartResult","requestList","forAddResult","reduce","foo","push","newResult","concat","filter","e","includes","sort","b","Cell","props","cell","ListStudents","useContext","dispatch","cells","setcells","useEffect","getAllCells","map","iterator","Math","random","TechTask","App","useReducer","Provider","src","logo","alt","href","target","rel","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3455c032.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const Active = {\r\n    REALIZATION: \"REALIZATION\",\r\n    TECHTASK : `TECHTASK`,\r\n    TESTCASE: `TESTCASE`,\r\n} \r\n\r\nconst AppRoute = {\r\n    ROOT: `/`,\r\n    ADD: `/add`,\r\n    DELETE: `/delete`,\r\n    LIST: `/students`,\r\n    TECHTASK : `/task`,\r\n };\r\n\r\nconst ReducerActionRouter = {\r\n    SWITCHPAGE : `SWITCHPAGE`,\r\n    SENDCELLS: `SENDCELLS`, \r\n    ERROR: `ERROR`, \r\n    GETALLCELLS: `GETALLCELLS`, \r\n}\r\n\r\nexport {\r\n    ReducerActionRouter,\r\n    AppRoute,\r\n    Active\r\n\r\n};","import { AppRoute } from \"./CONST.js\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Toolbar() {\r\n\r\n    return (\r\n\r\n        <div className=\"toolbar\">\r\n\r\n            <Link className=\"toolbar-link\" to={AppRoute.ADD}>\r\n                <h2>- Добавить студента </h2>\r\n            </Link>\r\n            <Link className=\"toolbar-link\" to={AppRoute.DELETE}>\r\n                <h2>- Удалить студента </h2>\r\n            </Link>  \r\n             <Link className=\"toolbar-link\" to={AppRoute.LIST}>\r\n                <h2>- Список студентов </h2>\r\n            </Link>\r\n            <Link className=\"toolbar-link\" to={AppRoute.TECHTASK}>\r\n                <h2>- Тех. задание </h2>\r\n            </Link>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport Toolbar from \"./Toolbar.jsx\"\r\n\r\n\r\nfunction Main() {\r\n \r\n    return (\r\n        <div className=\"main\">\r\n            <Toolbar\r\n        \r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n"," async function getAllCells() {\r\n     const response = await fetch('/api/students');\r\n     return await response.json();\r\n }\r\n async function deleteStudents(data) {\r\n     const url = `/api/students` + '?' + (new URLSearchParams(data)).toString();\r\n\r\n     const response = await fetch(url, {\r\n         method: \"DELETE\",\r\n     })\r\n     return await response.json();\r\n\r\n }\r\n\r\n\r\n\r\n async function recStudent(data) {\r\n    const url = `/api/students` + '?' + (new URLSearchParams(data)).toString();\r\n\r\n     const response = await fetch(url, {\r\n         method: \"POST\",\r\n    \r\n     })\r\n\r\n     return await response.json();\r\n\r\n }\r\n\r\n async function deleteAllInBD(data) {\r\n     const response = await fetch(`/api/clear`, {\r\n         method: \"POST\"\r\n     })\r\n     return await response.json();\r\n\r\n }\r\n\r\n export {\r\n     getAllCells,\r\n     deleteStudents,\r\n     recStudent,\r\n     deleteAllInBD\r\n }","import React, { useState, useRef } from 'react';\r\n\r\nimport { recStudent } from \"./Api.js\"\r\n\r\n\r\nconst AddStudent = () => {\r\n    let [info, setinfo] = useState( \"Ожидание\" );\r\n    let formRef = useRef(null);\r\n    let usernameRef = useRef(null);\r\n    let lastnameRef = useRef(null);\r\n    let patronymicRef = useRef(null);\r\n    let studygroupRef = useRef(null);\r\n    let dateofbrithRef = useRef(null);\r\n\r\n    const addStudent = (evt) => {\r\n        evt.preventDefault();\r\n        const userRequest = {\r\n            username: usernameRef.current.value,\r\n            lastname: lastnameRef.current.value,\r\n            patronymic: patronymicRef.current.value,\r\n            studygroup: studygroupRef.current.value,\r\n            dateofbrith: dateofbrithRef.current.value,\r\n        }\r\n        recStudent(userRequest)\r\n        .then(data => {\r\n                setinfo(data.answer)\r\n            })\r\n\r\n    }\r\n\r\n    const _handleReset = () => {\r\n        formRef = null\r\n    }\r\n\r\n    return (\r\n        <div className=\"realization\">\r\n            <form className=\"realization-form\" ref={formRef}>\r\n                <fieldset className=\"realization-form__element\">\r\n                    <label className=\"realization-form__label\" htmlFor=\"users\">Имя студента </label>\r\n                    <input id=\"username\" name=\"username\" type=\"text\" required ref={usernameRef} />\r\n                </fieldset>\r\n                <fieldset className=\"realization-form__element\">\r\n                    <label className=\"realization-form__label\" htmlFor=\"users\">Очество студента </label>\r\n                    <input id=\"patronymic\" name=\"patronymic\" type=\"text\" required ref={patronymicRef} />\r\n                </fieldset>\r\n                <fieldset className=\"realization-form__element\">\r\n                    <label className=\"realization-form__label\" htmlFor=\"users\">Фамилия студента </label>\r\n                    <input id=\"lastname\" name=\"lastname\" type=\"text\" required ref={lastnameRef} />\r\n                </fieldset>\r\n                <fieldset className=\"realization-form__element\">\r\n                    <label className=\"realization-form__label\" htmlFor=\"users\">Группа студента </label>\r\n                    <input id=\"studygroup\" name=\"studygroup\" type=\"text\" required ref={studygroupRef} />\r\n                </fieldset>\r\n                <fieldset className=\"realization-form__element\">\r\n                    <label className=\"realization-form__label\" htmlFor=\"users\">День рождения: </label>\r\n                    <input id=\"dateofbrith\" name=\"dateofbrith\" type=\"text\" required ref={dateofbrithRef} />\r\n                    <span> В формате год-месяц-день(2021-09-09)</span>\r\n                </fieldset>\r\n                <fieldset className=\"realization-form__element realization-form__element--submit\">\r\n                    <button className=\"ad-form__submit\" type=\"submit\" onClick={addStudent}>Отправить</button>\r\n                    или\r\n                    <button className=\"ad-form__reset\" type=\"reset\" onClick={_handleReset}>Очистить форму</button>\r\n                </fieldset>\r\n            </form>\r\n            <h1>{info}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddStudent;","import React, { useState, useRef } from 'react';\r\n\r\nimport { deleteStudents } from \"./Api.js\"\r\n\r\n\r\nconst DeleteStudent = () => {\r\n    let [info, setinfo] = useState([\"Ожидание\"]);\r\n    let formRef = useRef(null);\r\n    let nameRef = useRef(null);\r\n\r\n    const deleteStudent = (evt) => {\r\n        evt.preventDefault();\r\n \r\n        const userRequest = {\r\n            id: nameRef.current.value,\r\n        }\r\n        console.log(userRequest)\r\n        deleteStudents(userRequest)\r\n            .then(data => {\r\n                 setinfo(data.answer)\r\n            })\r\n\r\n    }\r\n\r\n    const _handleReset = () => {\r\n        formRef = null\r\n    }\r\n\r\n    return (\r\n        <div className=\"realization\">\r\n            <form className=\"realization-form\" ref={formRef}>\r\n                <fieldset className=\"realization-form__element\">\r\n                    <label className=\"realization-form__label\" htmlFor=\"users\">ID студента: </label>\r\n                    <input id=\"users\" name=\"users\" type=\"text\" required ref={nameRef} />\r\n                </fieldset>\r\n                <fieldset className=\"realization-form__element realization-form__element--submit\">\r\n                    <button className=\"ad-form__submit\" type=\"submit\" onClick={deleteStudent}>Отправить</button>\r\n                    или\r\n                    <button className=\"ad-form__reset\" type=\"reset\" onClick={_handleReset}>Очистить форму</button>\r\n                </fieldset>\r\n            </form>\r\n            <h1>{info}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteStudent;","import React from \"react\";\r\nimport { ReducerActionRouter, Active } from \"./CONST.js\"\r\n\r\nconst DataContext = React.createContext(\"cells\");\r\nconst initialState = {\r\n    active: Active.REALIZATION,\r\n    result: [],\r\n    status: \"\"\r\n};\r\n\r\n\r\nconst dataReducer = (state, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case ReducerActionRouter.GETALLCELLS:\r\n            const response = action.payload;\r\n\r\n         \r\n            return Object.assign({}, state, {\r\n                result: response,\r\n                status:\"getAllCells\"\r\n            })\r\n\r\n        case ReducerActionRouter.ERROR:\r\n            const responseError = action.payload;\r\n\r\n            return Object.assign({}, state, {\r\n                status: responseError\r\n            })\r\n        // а нужен ли вообще расчет на клиенте ?\r\n        case ReducerActionRouter.SENDCELLS:\r\n            const newPartResult = action.payload;\r\n            const requestList = newPartResult.requestList;\r\n            const forAddResult = requestList.reduce(\r\n                function (result, id) {\r\n                    const foo = {\r\n                        id: id,\r\n                        name: newPartResult.name\r\n                    }\r\n                    result.push(foo)\r\n                    return result\r\n                }, []\r\n            )\r\n            const oldResult = [].concat(state.result);\r\n            const newResult = oldResult.filter(e => {\r\n                return !requestList.includes(e.id)\r\n            });\r\n            newResult.push(...forAddResult)\r\n            newResult.sort((a, b) => {\r\n                return a.id - b.id\r\n            }\r\n            );\r\n            return Object.assign({}, state, {\r\n                result: newResult,\r\n                status: \"\"\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport {\r\n    dataReducer,\r\n    initialState,\r\n    DataContext\r\n};","\r\n\r\nfunction Cell(props) {\r\n    const {cell } = props;\r\n    const {  username,lastname,patronymic,studygroup,dateofbrith } = cell;\r\n    return (\r\n        <li className=\"cell\">\r\n            <div className=\"cell_name\">{username} </div>\r\n            <div className=\"cell_name\">{lastname} </div>\r\n            <div className=\"cell_name\">{patronymic} </div>\r\n            <div className=\"cell_name\">{studygroup} </div>\r\n            <div className=\"cell_name\">{dateofbrith} </div>\r\n        </li>\r\n    )\r\n};\r\n\r\n\r\nexport default Cell;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { DataContext } from \"./DataReducer\"\r\n\r\nimport { getAllCells } from \"./Api.js\"\r\nimport Cell from \"./Cell.jsx\"\r\nimport './Cell.css';\r\nimport { ReducerActionRouter } from \"./CONST.js\"\r\n\r\n\r\n\r\nconst ListStudents = () => {\r\n    const { state, dispatch } = useContext(DataContext);\r\n\r\n    let [cells, setcells] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAllCells()\r\n            .then(data => {\r\n                console.log(data)\r\n                dispatch({\r\n                    type: ReducerActionRouter.GETALLCELLS,\r\n                    payload: data\r\n                })\r\n\r\n            })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setcells(state.result)\r\n    }, [state.result]);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='wrapper'>\r\n            <h2>Список всех студентов</h2>\r\n            <div className=\"list-students\">\r\n                <ul className=\"cell_list\">\r\n                    {cells.map(\r\n                        (iterator) => {\r\n                            return (\r\n                                <Cell\r\n                                    cell={iterator}\r\n                                    key={iterator.username + Math.random()}\r\n                                />\r\n                            );\r\n                        })}\r\n                </ul>\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ListStudents;","\r\nfunction TechTask() {\r\n\r\n    return (\r\n        <div className=\"tech\">\r\n            <h1>TechTask</h1>\r\n            <p>\r\n                Для выполнения задания выбери любую реляционную базу данных (oracle, sql server, mysql, postgresql, sqlite и т.д.).\r\n\r\n                1. Заведи в БД таблицу данных о студентах, которая будет содержать: имя, фамилия, отчество, дата рождения, группа, уникальный номер.\r\n                2. Создай веб-приложение (клиентскую и серверную части), с помощью которого можно добавить студента, удалить студента по уникальному номеру, вывести список студентов.\r\n\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TechTask;","import logo from './logo.svg';\nimport './App.css';\nimport Main from \"./Main.jsx\"\nimport { AppRoute } from \"./CONST.js\"\nimport AddStudent from \"./AddStudent.jsx\"\nimport DeleteStudent from \"./DeleteStudent.jsx\"\nimport ListStudents from \"./ListStudents.jsx\"\n import TechTask from \"./TechTask.jsx\"\nimport {\n  BrowserRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\n import React, { useReducer } from 'react';\n\nimport { DataContext, initialState, dataReducer } from \"./DataReducer\"\n\nfunction App() {\n  const [state, dispatch] = useReducer(dataReducer, initialState);\n\n  return (\n    <DataContext.Provider value={{ dispatch, state }}>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <a\n          className=\"App-link\"\n          href=\"/\"\n        >\n          <h1>\n           Фронт \n          </h1>\n        </a>\n        <a\n          className=\"App-link\"\n          href=\"https://github.com/Egor18032019/testDockZilla2\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Репозиторий\n        </a>\n      </header>\n      <main>\n        <BrowserRouter>\n          <Routes>\n            <Route path={AppRoute.ROOT} element={<Main />} />\n            <Route path={AppRoute.ADD} element={<AddStudent />} />\n            <Route path={AppRoute.DELETE} element={<DeleteStudent />} />\n            <Route path={AppRoute.LIST} element={<ListStudents />} />\n             <Route path={AppRoute.TechTask} element={<TechTask />} />\n          </Routes>\n        </BrowserRouter>\n      </main>\n    </div >\n    </DataContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}